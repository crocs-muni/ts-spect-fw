########################################################################################
#   Example Test Vector of ECDSA Sign
#   Test Vector generated by tests/model/p256.py
#
#   Expected result:
#     f41df1bfe7708abd0bef2842f965c1f8036a612cb908c94118e7e65b9f1da9a89df08b09b5208ffa2196ba34afddadcf80994164977ac48aea8a7c9b75b79347
########################################################################################

input :
  # Digest of message (SHA256)
  - name : z # string
    value : f97afad8c66dcee7f4cf2d6e0670197b3d32aaf402e9084e72c89e52fc33908d
  # Secure Channel Hash (for deterministic nonce derivation) 
  - name : sch # string
    value : 5bfd1e8d9414173388c73350fc8b8fb7e190b1822afbad367b936126c0c2b417
  # Secure Channel Nonce (for deterministic nonce derivation)
  - name : scn # string (little-endian encoding)
    value : 2632e641
  # Private Key d such that d.G = A is public key
  - name : d # integer
    value : 0x4cd22d4f46792ae037ec363d69a16866caf6ba9b8c54652da493fae3182514c4
  # Private Key w (for deterministic nonce derivation)
  - name : w # string
    value : e71b538a79f38673d4241237b0f05cf3616e09824a4e574ef4fdae84e491e7e2
  - name : Ax # integer
    value : 0x7e31b5cee2580642244d606e8f94c1f23577ef22f0204786d5328e6a9a6b7200
  - name : Ay # integer
    value : 0x9a6414521df149c3ce74af9d6555a92a99f547bd6c699a25f47ad58462422fce
rng :
  # z coordinate randomization of base point
  - name : base_z_rng
    value : 0x0
  # random value for random point generation (point splitting countermeasure)
  - name : point_gen_rng
    value : 0xaaaa
  # group randomization of scalar for the first multiplication
  - name : s_rng_1
    value : 0xbbbb
  # group randomization of scalar for the second multiplication
  - name : s_rng_2
    value : 0xcccc
  # mask for signature part s calculation -> s = (zt + rtd) / (kt)
  - name : t_rng
    value : 0x0